server:
  port: 8080

spring:
  application:
    name: ai-portal-api

  datasource:
    url: jdbc:oracle:thin:@//localhost:1521/ORAAIPORTAL  # DB URL (예시)
    username: AIPORTALAPI
    password: AP1004
    driver-class-name: oracle.jdbc.OracleDriver

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: create # create, create-drop, validate, update, none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        # SpringPhysicalNamingStrategy(Default)  =>  camel case를 underscore 형태로 변경
        # PhysicalNamingStrategyStandardImpl     =>  변수 이름을 그대로 사용
    properties:
      hibernate:
        dialect: org.hibernate.dialect.OracleDialect
    generate-ddl: true
    show-sql: true

#-------------------------------------------------------------
# springdoc 정의
# http://localhost:8080/aiportal/swagger-ui.html
# http://localhost:8080/aiportal/api-docs
# http://localhost:8080/aiportal/api-docs.yaml
#-------------------------------------------------------------      
springdoc:
  api-docs:
    path: /api-docs # spring boot 웹 애플리케이션의 api를 OpenAPI 3을 이용하여 json 형식화 한것의 경로
  default-consumes-media-type: application/json # request media type 의 기본 값
  default-produces-media-type: application/json # response media type 의 기본 값
  swagger-ui: # 기본값 : 컨트롤러 내에서 정의한 api 메서드 순
    enabled: true
    operations-sorter: method # 태그 내 각 api의 정렬 기준
                              # alpha(알파벳 오름차순), method(http method 순) 
    tags-sorter: alpha 
    # path: swagger-ui.html
    disable-swagger-default-url: true
      # json화 된 config파일 대신 파라미터를 이용하여 swagger-ui에 접근하도록 합니다.
      # api-docs(/api-docs) 및 swagger-ui.configUrl(/api-docs/swagger-config)를 두번씩 호출하는 것을 방지합니다.
    doc-expansion: none # 기본 값: list
      # tag와 operation을 펼치는 방식에 대한 설정
      # String=["list", "full", "none"]
      # none으로 설정할 경우, tag 및 operation이 모두 닫힌채로 문서가 열립니다.
  #paths-to-match: # OpenAPI 3 로 문서화할 api path 리스트
  #  - /**
api:  # Swagger UI Information
  info:
    title: SKAX AI Portal Service API
    description: API to fetch Customer's data details for SKAX AI Portal Team
    version: 1.0.0
    terms-of-service: http://skax.aiportal.com/terms/
    contact:
      name: SKAX AI Portal Service API Team
      email: aiportalteam@skax.com
      url: http://skax.aiportal.com/aiportalteam
    license:
      name: Apache 2.0
      url: http://www.apache.org/licenses/LICENSE-2.0.html

#-------------------------------------------------------------
# Feign Client 호출 URL 정의
#-------------------------------------------------------------
feign:
  client:
    config:
      default:
#        errorDecoder: com.aiportal.exception.FeignErrorDecoder
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
        
prop:
  test:
    url: http://localhost:8080
  github: 
    url: https://api.github.com/repos

#-------------------------------------------------------------
# log File 설정
#-------------------------------------------------------------
logging:
  level:
    root: debug # trace, debug, info, warn, error, fatal
    org.springframework: debug
    org.springframework.jdbc: debug
    org.hibernate.type: off
    com.skax: debug
    
    jdbc:
      connection: off
      sqlonly: off
      sqltiming: info
      audit: off
      result: off
      resultsettable: info
  file:
    name: logs/aiportal.log
  logback:
    rollingpolicy:
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}-%i.log
      max-file-size: 100MB
      max-history: 30
  pattern:
    dateformat: yyyy-MM-dd HH:mm:ss.SSS,Asia/Seoul
    
mybatis:  # type을 쉽게 쓰기 위해서 dto 패키지를 type-aliaes에 설정
  # xml파일 result type에 패키지명을 생략할 수 있도록 Alias 설정
#  type-aliases-package: com.mydata.domain.mybatis
  # resource디렉토리의 mapper xml 파일위치
  mapper-locations: classpath:mapper/**/*.xml
  # type-handlers-package: com.example.typehandler
  configuration:
  # map-underscore-to-camel-case: true
    default-fetch-size: 500
    default-statement-timeout: 30

